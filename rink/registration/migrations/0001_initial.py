# Generated by Django 2.0.7 on 2018-07-26 04:55

from django.db import migrations, models
import django.db.models.deletion
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('billing', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='RegistrationData',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('contact_email', models.EmailField(max_length=254, verbose_name='Email Address')),
                ('contact_first_name', models.CharField(max_length=100, verbose_name='First Name')),
                ('contact_last_name', models.CharField(max_length=100, verbose_name='Last Name')),
                ('contact_address1', models.CharField(max_length=100, verbose_name='Address 1')),
                ('contact_address2', models.CharField(blank=True, max_length=100, verbose_name='Address 2')),
                ('contact_city', models.CharField(max_length=100, verbose_name='City')),
                ('contact_state', models.CharField(choices=[('AL', 'Alabama'), ('AK', 'Alaska'), ('AS', 'American Samoa'), ('AZ', 'Arizona'), ('AR', 'Arkansas'), ('AA', 'Armed Forces Americas'), ('AE', 'Armed Forces Europe'), ('AP', 'Armed Forces Pacific'), ('CA', 'California'), ('CO', 'Colorado'), ('CT', 'Connecticut'), ('DE', 'Delaware'), ('DC', 'District of Columbia'), ('FL', 'Florida'), ('GA', 'Georgia'), ('GU', 'Guam'), ('HI', 'Hawaii'), ('ID', 'Idaho'), ('IL', 'Illinois'), ('IN', 'Indiana'), ('IA', 'Iowa'), ('KS', 'Kansas'), ('KY', 'Kentucky'), ('LA', 'Louisiana'), ('ME', 'Maine'), ('MD', 'Maryland'), ('MA', 'Massachusetts'), ('MI', 'Michigan'), ('MN', 'Minnesota'), ('MS', 'Mississippi'), ('MO', 'Missouri'), ('MT', 'Montana'), ('NE', 'Nebraska'), ('NV', 'Nevada'), ('NH', 'New Hampshire'), ('NJ', 'New Jersey'), ('NM', 'New Mexico'), ('NY', 'New York'), ('NC', 'North Carolina'), ('ND', 'North Dakota'), ('MP', 'Northern Mariana Islands'), ('OH', 'Ohio'), ('OK', 'Oklahoma'), ('OR', 'Oregon'), ('PA', 'Pennsylvania'), ('PR', 'Puerto Rico'), ('RI', 'Rhode Island'), ('SC', 'South Carolina'), ('SD', 'South Dakota'), ('TN', 'Tennessee'), ('TX', 'Texas'), ('UT', 'Utah'), ('VT', 'Vermont'), ('VI', 'Virgin Islands'), ('VA', 'Virginia'), ('WA', 'Washington'), ('WV', 'West Virginia'), ('WI', 'Wisconsin'), ('WY', 'Wyoming')], max_length=2, verbose_name='State')),
                ('contact_zipcode', models.CharField(max_length=11, verbose_name='Zip Code')),
                ('contact_phone', models.CharField(max_length=25, verbose_name='Phone Number')),
                ('derby_name', models.CharField(blank=True, help_text='Not required. Guidance document link is where?', max_length=100, verbose_name='Derby Name')),
                ('derby_number', models.CharField(blank=True, help_text='Not required. Guidance document link is where?', max_length=10, verbose_name='Derby Number')),
                ('derby_insurance_number', models.CharField(blank=True, help_text='Derby insurance details. Insurance may not be required.', max_length=50, verbose_name='Derby Insurance Number')),
                ('derby_pronoun', models.CharField(blank=True, help_text='Optional. Examples: her/she, he/her, etc.', max_length=50, verbose_name='Personal Pronoun')),
                ('emergency_date_of_birth', models.DateField(verbose_name='Date of Birth')),
                ('emergency_contact', models.CharField(max_length=100, verbose_name='Emergency Contact Name')),
                ('emergency_phone', models.CharField(max_length=25, verbose_name='Emergency Phone Contact')),
                ('emergency_relationship', models.CharField(max_length=100, verbose_name='Emergency Contact Relationship')),
                ('emergency_hospital', models.CharField(max_length=100, verbose_name='Preferred Hospital Name')),
                ('emergency_allergies', models.TextField(verbose_name="Allergies and Medical Conditions.\n\nPlease write 'none' if you have no medical concerns we might need to know about.")),
                ('registration_date', models.DateTimeField(auto_now_add=True, verbose_name='Registration Date')),
            ],
        ),
        migrations.CreateModel(
            name='RegistrationEvent',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(help_text="Example: 'Summer Skating', 'MRD 2018 Registration'", max_length=50, verbose_name='Event Name')),
                ('slug', models.SlugField(help_text="Example: 'summer-skating-2018', is used for the registration URL.", verbose_name='Event Slug')),
                ('description', models.TextField(blank=True, help_text='Blurb of text shown at the top of the registration form.', verbose_name='Event Description')),
                ('start_date', models.DateField(help_text='First day of this session.', verbose_name='Start Date')),
                ('end_date', models.DateField(help_text='Last day of this session.', verbose_name='End Date')),
                ('public_registration_open_date', models.DateTimeField(blank=True, help_text='The date/time that the registration form becomes available. If you set it to blank, registration is open now.', null=True, verbose_name='Registration Opens On')),
                ('public_registration_closes_date', models.DateTimeField(blank=True, help_text='The date/time that the registration form becomes available. If you set it to blank, registration will never close.', null=True, verbose_name='Registration Closes On')),
                ('invite_expiration_date', models.DateTimeField(blank=True, help_text='People who are invited must register before this date. Invites will no longer work after this date. If you set this to blank, invites will always work.', null=True, verbose_name='Invites Expire On')),
                ('minimum_registration_age', models.IntegerField(blank=True, help_text='The minimum age someone can register for this event. Calculated based on the Start Date. Leave blank to disable this check.', null=True, verbose_name='Minimum Age (Years)')),
                ('maximum_registration_age', models.IntegerField(blank=True, help_text='The maximum age someone can register for this event. Calculated based on the Start Date. Leave blank to disable this check.', null=True, verbose_name='Maximum Age (Years)')),
            ],
        ),
        migrations.CreateModel(
            name='RegistrationInvite',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('email', models.EmailField(max_length=254, verbose_name='Email Address')),
                ('uuid', models.UUIDField(default=uuid.uuid4, editable=False, unique=True)),
                ('sent_date', models.DateTimeField(blank=True, null=True, verbose_name='Date Sent')),
                ('completed_date', models.DateTimeField(blank=True, null=True, verbose_name='Registration Completed')),
                ('public_registration', models.BooleanField(default=False, verbose_name='Public Registration')),
                ('billing_group', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='billing.BillingGroup')),
                ('event', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='registration.RegistrationEvent')),
            ],
        ),
    ]
