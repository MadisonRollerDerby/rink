# Generated by Django 2.0.7 on 2018-08-20 21:02

from decimal import Decimal
from django.conf import settings
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('league', '0001_initial'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='BillingGroup',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(help_text="Example: 'Injured', 'Member', 'Adminisration', 'Social'", max_length=50, verbose_name='Status Name')),
                ('description', models.CharField(blank=True, help_text='Any details about what this status represents.', max_length=250, verbose_name='Status Description')),
                ('invoice_amount', models.DecimalField(decimal_places=2, help_text='The amount we should bill a user matching this status for the billing period specified above.', max_digits=10, validators=[django.core.validators.MinValueValidator(Decimal('0.00'))], verbose_name='Custom Dues Amount')),
                ('default_group_for_league', models.BooleanField(default=False, help_text='If selected, this is the default billing group that new users and events will assign people to.', verbose_name='Is Default Billing Group')),
            ],
            options={
                'ordering': ['league', 'name'],
            },
        ),
        migrations.CreateModel(
            name='BillingGroupMembership',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
        ),
        migrations.CreateModel(
            name='BillingPeriod',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(help_text="Example: 'July Dues''", max_length=50, verbose_name='Billing Period Name')),
                ('start_date', models.DateField(help_text='First day of this billing period.', verbose_name='Start Date')),
                ('end_date', models.DateField(help_text='Last day of this billing period.', verbose_name='End Date')),
                ('invoice_date', models.DateField(help_text='The date invoices will be sent out for this billing period.', verbose_name='Invoice Date')),
                ('due_date', models.DateField(help_text='The date payments are due. Automatic credit card billing will also occur on this day.', verbose_name='Due Date')),
            ],
            options={
                'verbose_name': 'Dues Billing Date',
                'verbose_name_plural': 'Dues Billing Dates',
                'ordering': ['league', 'event', 'start_date'],
            },
        ),
        migrations.CreateModel(
            name='BillingPeriodCustomPaymentAmount',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('invoice_amount', models.DecimalField(decimal_places=2, help_text='The amount we should bill a user matching this status for the billing period specified above.', max_digits=10, verbose_name='Custom Dues Amount')),
            ],
            options={
                'verbose_name': 'Billing Period Amount for Group',
                'verbose_name_plural': 'Billing Period Amounts for Groups',
                'ordering': ['group__name'],
            },
        ),
        migrations.CreateModel(
            name='BillingSubscription',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('status', models.CharField(choices=[('active', 'Active'), ('inactive', 'Inactive')], default='active', max_length=50, verbose_name='Billing Status')),
                ('create_date', models.DateTimeField(auto_now_add=True, help_text='The date this subscription was created.', verbose_name='Active Date')),
                ('deactive_date', models.DateTimeField(blank=True, help_text='The date this subscription was deactivated.', null=True, verbose_name='Deactivate Date')),
            ],
        ),
        migrations.CreateModel(
            name='Invoice',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('description', models.CharField(blank=True, max_length=200, verbose_name='Invoice Description')),
                ('invoice_amount', models.DecimalField(decimal_places=2, help_text='Total amount to invoice', max_digits=10, validators=[django.core.validators.MinValueValidator(Decimal('0.00'))], verbose_name='Amount Invoiced')),
                ('paid_amount', models.DecimalField(decimal_places=2, default=0, help_text='Total amount paid on this invoice', max_digits=10, validators=[django.core.validators.MinValueValidator(Decimal('0.00'))], verbose_name='Amount Paid')),
                ('refunded_amount', models.DecimalField(blank=True, decimal_places=2, default=0, help_text='Total amount refunded on this invoice', max_digits=10, validators=[django.core.validators.MinValueValidator(Decimal('0.00'))], verbose_name='Amount Refunded')),
                ('status', models.CharField(choices=[('unpaid', 'Unpaid'), ('paid', 'Paid'), ('canceled', 'Canceled'), ('refunded', 'Refunded')], default='unpaid', max_length=50, verbose_name='Invoice Status')),
                ('autopay_disabled', models.BooleanField(default=False, verbose_name='AutoPay Disabled')),
                ('invoice_date', models.DateField(help_text='The date this invoice was generated on.', verbose_name='Invoice Date')),
                ('due_date', models.DateField(help_text='The date this invoice is due for payment or will be collected for auto payment.', verbose_name='Due Date')),
                ('paid_date', models.DateTimeField(blank=True, help_text='The date this invoice was marked as paid.', null=True, verbose_name='Payment Date')),
                ('refund_date', models.DateTimeField(blank=True, help_text='The date this invoice was refunded.', null=True, verbose_name='Refund Date')),
                ('billing_period', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='billing.BillingPeriod')),
                ('league', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='league.League')),
            ],
            options={
                'ordering': ['invoice_date'],
            },
        ),
        migrations.CreateModel(
            name='Payment',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('processor', models.CharField(choices=[('cash', 'Cash'), ('check', 'Check'), ('stripe', 'Stripe'), ('square', 'Square')], default='cash', help_text='Name of the payment processor, or possibly Cash or Check.', max_length=50, verbose_name='Payment Processor')),
                ('transaction_id', models.CharField(blank=True, max_length=100, verbose_name='Transaction ID')),
                ('amount', models.DecimalField(decimal_places=2, default=0, help_text='Total amount paid for this transaction', max_digits=10, validators=[django.core.validators.MinValueValidator(Decimal('0.00'))], verbose_name='Amount Paid')),
                ('fee', models.DecimalField(decimal_places=2, default=0, help_text='Total fee paid to process this transaction', max_digits=10, validators=[django.core.validators.MinValueValidator(Decimal('0.00'))], verbose_name='Payment Processor Fee')),
                ('card_type', models.CharField(blank=True, max_length=50, verbose_name='Credit/Debit Card Type')),
                ('card_last4', models.CharField(blank=True, max_length=4, verbose_name='Credit/Debit Card Last 4 Digits')),
                ('card_expire_month', models.IntegerField(blank=True, null=True, verbose_name='Credit/Debit Card Expiration Month')),
                ('card_expire_year', models.IntegerField(blank=True, null=True, verbose_name='Credit/Debit Card Expiration Year')),
                ('payment_date', models.DateTimeField(blank=True, null=True, verbose_name='Payment Date')),
                ('refund_date', models.DateTimeField(blank=True, null=True, verbose_name='Refund Date')),
                ('refund_amount', models.DecimalField(blank=True, decimal_places=2, default=0, help_text='Total amount refunded for this transaction', max_digits=10, validators=[django.core.validators.MinValueValidator(Decimal('0.00'))], verbose_name='Amount Refunded')),
                ('refund_reason', models.CharField(blank=True, max_length=200, verbose_name='Reason for Refund')),
                ('league', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='league.League')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='UserStripeCard',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('customer_id', models.CharField(blank=True, max_length=50, verbose_name='Customer ID at Payment Processor')),
                ('card_type', models.CharField(blank=True, max_length=50, verbose_name='Credit/Debit Card Type')),
                ('card_last4', models.CharField(blank=True, max_length=4, verbose_name='Credit/Debit Card Last 4 Digits')),
                ('card_expire_month', models.IntegerField(blank=True, null=True, verbose_name='Credit/Debit Card Expiration Month')),
                ('card_expire_year', models.IntegerField(blank=True, null=True, verbose_name='Credit/Debit Card Expiration Year')),
                ('card_last_update_date', models.DateTimeField(blank=True, null=True, verbose_name='Last time credit card was updated')),
                ('card_last_charge_date', models.DateTimeField(blank=True, null=True, verbose_name='Last time credit card was charged')),
                ('card_last_fail_date', models.DateTimeField(blank=True, null=True, verbose_name='Last time credit card had a failed charge')),
                ('league', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='league.League')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.AddField(
            model_name='invoice',
            name='payment',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='billing.Payment'),
        ),
        migrations.AddField(
            model_name='invoice',
            name='user',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL),
        ),
    ]
