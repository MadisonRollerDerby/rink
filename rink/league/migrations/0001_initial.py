# Generated by Django 2.0.7 on 2018-08-20 21:02

from django.db import migrations, models
import django.db.models.deletion
import fernet_fields.fields


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='InsuranceType',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(help_text="Example: 'WFTDA'", max_length=50, verbose_name='Insurer Name')),
                ('long_name', models.CharField(blank=True, help_text="Example: 'Women's Flat Track Derby Association'", max_length=50, null=True, verbose_name='Insurer Long Name')),
                ('details_url', models.CharField(blank=True, help_text='Link to sign up for insurance or get more information.', max_length=200, null=True, verbose_name='Insurer Details URL')),
            ],
            options={
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='League',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(help_text="Example: 'Wreckers', 'Juniors', 'Madison Roller Derby', etc.", max_length=50, verbose_name='League Name')),
                ('short_name', models.CharField(help_text="Example: 'MWD', 'Juniors', 'MRD', etc. Something short.", max_length=50, verbose_name='Short Name')),
                ('slug', models.CharField(blank=True, help_text="Example: 'mrd', 'wreckers', 'juniors'. DO NOT CHANGE.", max_length=20, verbose_name='League Slug')),
                ('logo', models.ImageField(blank=True, null=True, upload_to='logos')),
                ('default_payment_due_day', models.IntegerField(choices=[(1, 1), (2, 2), (3, 3), (4, 4), (5, 5), (6, 6), (7, 7), (8, 8), (9, 9), (10, 10), (11, 11), (12, 12), (13, 13), (14, 14), (15, 15), (16, 16), (17, 17), (18, 18), (19, 19), (20, 20), (21, 21), (22, 22), (23, 23), (24, 24), (25, 25), (26, 26), (27, 27), (28, 28), (29, 29), (30, 30)], default=1, help_text='Default day of month to set billing due date.', verbose_name='Default Payment Due Day')),
                ('default_invoice_day_diff', models.IntegerField(choices=[(1, '1 days before due date'), (2, '2 days before due date'), (3, '3 days before due date'), (4, '4 days before due date'), (5, '5 days before due date'), (6, '6 days before due date'), (7, '7 days before due date'), (8, '8 days before due date'), (9, '9 days before due date'), (10, '10 days before due date'), (11, '11 days before due date'), (12, '12 days before due date'), (13, '13 days before due date'), (14, '14 days before due date'), (15, '15 days before due date'), (16, '16 days before due date'), (17, '17 days before due date'), (18, '18 days before due date'), (19, '19 days before due date'), (20, '20 days before due date')], default=10, help_text='Default day to generate and email invoices.', verbose_name='Default Invoice Generation Day')),
                ('stripe_private_key', fernet_fields.fields.EncryptedCharField(blank=True, help_text='Private/secret API key for Stripe.com. Used for charging credit cards.', max_length=100, verbose_name='Stripe Secret Key')),
                ('stripe_public_key', fernet_fields.fields.EncryptedCharField(blank=True, help_text='Private API key for Stripe.com. Used for charging credit cards.', max_length=100, verbose_name='Stripe Public Key')),
                ('default_address_state', models.CharField(blank=True, choices=[('AL', 'Alabama'), ('AK', 'Alaska'), ('AS', 'American Samoa'), ('AZ', 'Arizona'), ('AR', 'Arkansas'), ('AA', 'Armed Forces Americas'), ('AE', 'Armed Forces Europe'), ('AP', 'Armed Forces Pacific'), ('CA', 'California'), ('CO', 'Colorado'), ('CT', 'Connecticut'), ('DE', 'Delaware'), ('DC', 'District of Columbia'), ('FL', 'Florida'), ('GA', 'Georgia'), ('GU', 'Guam'), ('HI', 'Hawaii'), ('ID', 'Idaho'), ('IL', 'Illinois'), ('IN', 'Indiana'), ('IA', 'Iowa'), ('KS', 'Kansas'), ('KY', 'Kentucky'), ('LA', 'Louisiana'), ('ME', 'Maine'), ('MD', 'Maryland'), ('MA', 'Massachusetts'), ('MI', 'Michigan'), ('MN', 'Minnesota'), ('MS', 'Mississippi'), ('MO', 'Missouri'), ('MT', 'Montana'), ('NE', 'Nebraska'), ('NV', 'Nevada'), ('NH', 'New Hampshire'), ('NJ', 'New Jersey'), ('NM', 'New Mexico'), ('NY', 'New York'), ('NC', 'North Carolina'), ('ND', 'North Dakota'), ('MP', 'Northern Mariana Islands'), ('OH', 'Ohio'), ('OK', 'Oklahoma'), ('OR', 'Oregon'), ('PA', 'Pennsylvania'), ('PR', 'Puerto Rico'), ('RI', 'Rhode Island'), ('SC', 'South Carolina'), ('SD', 'South Dakota'), ('TN', 'Tennessee'), ('TX', 'Texas'), ('UT', 'Utah'), ('VT', 'Vermont'), ('VI', 'Virgin Islands'), ('VA', 'Virginia'), ('WA', 'Washington'), ('WV', 'West Virginia'), ('WI', 'Wisconsin'), ('WY', 'Wyoming')], help_text='Default state choice on Registration forms.', max_length=2)),
                ('email_from_name', models.CharField(blank=True, help_text="The name of the person or account sending email. Example 'MRD Training'.", max_length=100, verbose_name='Email From Name')),
                ('email_from_address', models.EmailField(help_text='The email address all emails from this league will be from.', max_length=100, verbose_name='Email From Address')),
                ('email_cc_address', models.EmailField(blank=True, help_text="If you would like all emails sent from this league to be CC'd to an email, enter one here. Leave blank to disable.", max_length=100, verbose_name='CC Emails To')),
                ('email_header', models.TextField(blank=True, help_text='Custom header design HTML for all emails sent from this system.', verbose_name='Email Header')),
                ('email_signature', models.TextField(blank=True, help_text='Custom signature in HTML for all emails sent from this system.', verbose_name='Email Signature')),
                ('email_footer', models.TextField(blank=True, help_text='Custom header design HTML (bottom) for all emails sent from this system.', verbose_name='Email Footer')),
                ('default_insurance_type', models.ForeignKey(blank=True, help_text='Default insurance type to show on Registration forms.', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='default_insurance_type', to='league.InsuranceType')),
            ],
            options={
                'ordering': ['name'],
                'permissions': (('league_admin', 'Can manage league settings and email templates.'), ('billing_manager', 'Can send bills and manage dues.'), ('roster_manager', 'Can manage user profiles and assign people to teams.'), ('registration_manager', 'Can manage registration system and send invites.'), ('survey_manager', 'Can manage voting and surveys.'), ('event_manager', 'Can manage special event pages.'), ('league_member', 'Active member of league.')),
            },
        ),
        migrations.CreateModel(
            name='Organization',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(help_text="Example: 'Madison Roller Derby', etc.", max_length=50, verbose_name='Organization Name')),
                ('slug', models.CharField(blank=True, help_text="Example: 'mrd', 'wreckers', 'juniors'. DO NOT CHANGE.", max_length=50, unique=True, verbose_name='Organization Slug')),
            ],
            options={
                'ordering': ['name'],
                'permissions': (('org_admin', 'Can manage organization settings, create leagues and more.'),),
            },
        ),
        migrations.AddField(
            model_name='league',
            name='organization',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='league.Organization'),
        ),
        migrations.AddField(
            model_name='insurancetype',
            name='league',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='league.League'),
        ),
        migrations.AlterUniqueTogether(
            name='league',
            unique_together={('slug', 'organization')},
        ),
        migrations.AlterUniqueTogether(
            name='insurancetype',
            unique_together={('league', 'name')},
        ),
    ]
